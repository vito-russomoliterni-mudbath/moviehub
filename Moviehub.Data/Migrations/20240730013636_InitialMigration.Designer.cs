// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Moviehub.Data.Database;

#nullable disable

namespace Moviehub.Data.Migrations
{
    [DbContext(typeof(MoviehubDbContext))]
    [Migration("20240730013636_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("Moviehub.Data.Database.Entities.Cinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Cinema");
                });

            modelBuilder.Entity("Moviehub.Data.Database.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasColumnName("director");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasColumnName("genre");

                    b.Property<string>("PrincessTheatreMovieId")
                        .IsRequired()
                        .HasColumnType("varchar(16)")
                        .HasColumnName("princessTheatreMovieId");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasColumnName("rating");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("date")
                        .HasColumnName("releaseDate");

                    b.Property<int>("Runtime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("runtime");

                    b.Property<string>("Synopsis")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("synopsis");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("Moviehub.Data.Database.Entities.MovieCinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("CinemaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cinemaId");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("movieId");

                    b.Property<DateTime>("Showtime")
                        .HasColumnType("date")
                        .HasColumnName("showtime");

                    b.Property<decimal>("TicketPrice")
                        .HasColumnType("decimal")
                        .HasColumnName("ticketPrice");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieCinema");
                });

            modelBuilder.Entity("Moviehub.Data.Database.Entities.MovieCinema", b =>
                {
                    b.HasOne("Moviehub.Data.Database.Entities.Cinema", "Cinema")
                        .WithMany("MovieCinemas")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moviehub.Data.Database.Entities.Movie", "Movie")
                        .WithMany("MovieCinemas")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Moviehub.Data.Database.Entities.Cinema", b =>
                {
                    b.Navigation("MovieCinemas");
                });

            modelBuilder.Entity("Moviehub.Data.Database.Entities.Movie", b =>
                {
                    b.Navigation("MovieCinemas");
                });
#pragma warning restore 612, 618
        }
    }
}
